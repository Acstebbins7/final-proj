import { AnimationToken } from "../AnimationToken";
import { TEasing } from "./EasingFunctions";
/**
 * @description A generic function for animating any value
 * @remarks See functions {@link DoubleAnimator.animate} and {@link NumberRangeAnimator.animate} for examples on how to use this
 * @param durationMs The duration of the animation in milliseconds
 * @param from The start value
 * @param to The end value
 * @param onAnimate A function which is called on animation step, with the current intermediate value passed in
 * @param interpolate An interpolation function
 * @param onCompleted A function which is called when animation is completed
 * @param easingFunc An easing function. See {@link IEasingMap} for a list of values
 */
export declare function animateAny<T>(durationMs: number, from: T, to: T, onAnimate: (intermediateValue: T) => void, interpolate: (start: T, end: T, interpolationFactor: number) => T, onCompleted: () => void, easingFunc: TEasing): AnimationToken;
