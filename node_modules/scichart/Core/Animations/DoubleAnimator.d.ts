import { AnimationToken } from "../AnimationToken";
import { TEasing } from "./EasingFunctions";
/**
 * A class for animating a double-precision (number) value
 */
export declare class DoubleAnimator {
    /**
     * Animates a number with a start, to value over a specified duration and with an optional completed and easing function
     * @param from The start value to animate
     * @param to The end value to animate
     * @param durationMs The duration of the animation in milliseconds
     * @param onAnimate A callback function which is called with intermediate values
     * @param onCompleted A callback function which is called when the animation completes
     * @param easingFunction An optional easing function. See {@link IEasingMap} for a list of values
     */
    static animate(from: number, to: number, durationMs: number, onAnimate: (value: number) => void, onCompleted: () => void, easingFunction?: TEasing): AnimationToken;
    private static interpolate;
}
