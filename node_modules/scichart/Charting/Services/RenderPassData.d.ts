import { NumberRange } from "../../Core/NumberRange";
import { CoordinateCalculatorBase } from "../Numerics/CoordinateCalculators/CoordinateCalculatorBase";
/**
 * @summary RenderPassData contains properties which are passed to {@link BaseRenderableSeries} at the time of drawing
 */
export declare class RenderPassData {
    readonly indexRange: NumberRange;
    readonly xCoordinateCalculator: CoordinateCalculatorBase;
    readonly yCoordinateCalculator: CoordinateCalculatorBase;
    readonly isVerticalChart: boolean;
    /**
     * Creates an instance of RenderPassData
     * @param indexRange The min and max index to data-range currently visible on the {@link SciChartSurface}
     * @param xCoordinateCalculator The XAxis {@link CoordinateCalculatorBase | Coordinate Calculator},
     * used to transform between pixel and data-coordinates
     * @param yCoordinateCalculator The YAxis {@link CoordinateCalculatorBase | Coordinate Calculator},
     * used to transform between pixel and data-coordinates
     * @param isVerticalChart A flag indicating if the chart is currently vertically arranged (XAxis on the left, YAxis on the top/bottom)
     */
    constructor(indexRange: NumberRange, xCoordinateCalculator: CoordinateCalculatorBase, yCoordinateCalculator: CoordinateCalculatorBase, isVerticalChart: boolean);
}
