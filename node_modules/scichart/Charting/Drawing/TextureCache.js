"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextureCache = void 0;
const Deleter_1 = require("../../Core/Deleter");
const BaseCache_1 = require("./BaseCache");
/**
 * @ignore
 */
class TextureCache extends BaseCache_1.BaseCache {
    /**
     * unlike the base class this one accepts both  context
     * @param wasmContext TSciChart or TSciChart3D
     */
    constructor(wasmContext) {
        super(wasmContext);
        this.wasmContext = wasmContext;
    }
    get value() {
        if (!this.cachedEntity && this.textureFormat) {
            this.cachedEntity = this.create(this.width, this.height, this.textureFormat);
        }
        return this.cachedEntity;
    }
    /**
     * Creates or fetches a new texture with the specified params
     * @param width
     * @param height
     * @param textureFormat
     */
    create(width, height, textureFormat) {
        if (this.cachedEntity
            && width === this.width
            && height === this.height
            && textureFormat === this.textureFormat) {
            return this.cachedEntity;
        }
        Deleter_1.deleteSafe(this.cachedEntity);
        this.width = width;
        this.height = height;
        this.textureFormat = textureFormat;
        return this.cachedEntity = this.wasmContext.SCRTCreateBitmapTexture(this.width, this.height, textureFormat);
    }
    resetCache() {
        this.invalidateCache();
        this.width = undefined;
        this.height = undefined;
        this.textureFormat = undefined;
    }
}
exports.TextureCache = TextureCache;
