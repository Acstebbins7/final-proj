import { EventHandler } from "../../Core/EventHandler";
import { NumberRange } from "../../Core/NumberRange";
import { DoubleVector, TSciChart } from "../../types/TSciChart";
import { EDataSeriesType, IDataSeries } from "./IDataSeries";
/**
 * Options to pass to the {@link BaseDataSeries} constructor
 */
export interface IBaseDataSeriesOptions {
    /**
     * The DataSeries name, used in legends, tooltips to identify the chart series
     */
    dataSeriesName?: string;
    /**
     * When true, the Data is sorted in X.
     * @remarks The user must specify this parameter if the data is not sorted in X
     * in order to have correct rendering. This parameter is used to choose the correct
     * algorithms for zooming, panning and ranging and ensure best performance.
     */
    dataIsSortedInX?: boolean;
    /**
     * Gets or sets whether the Y data contains NaN values.
     */
    containsNaN?: boolean;
}
/**
 * The base class for DataSeries in SciChart's
 * {@link https://www.scichart.com/javascript-chart-features | JavaScript Charts}
 * @remarks
 * A DataSeries stores the data to render. This is independent from the {@link IRenderableSeries | RenderableSeries}
 * which defines how that data should be rendered.
 *
 * See derived types of {@link BaseDataSeries} to find out what data-series are available.
 * See derived types of {@link IRenderableSeries} to find out what 2D JavaScript Chart types are available.
 */
export declare abstract class BaseDataSeries implements IDataSeries {
    /**
     * @inheritDoc
     */
    abstract readonly type: EDataSeriesType;
    /**
     * @inheritDoc
     */
    readonly dataChanged: EventHandler<void>;
    minXSpacing: number;
    protected xValues: DoubleVector;
    protected yValues: DoubleVector;
    protected indexes: DoubleVector;
    protected isDeleted: boolean;
    /**
     * The {@link TSciChart | SciChart WebAssembly Context} containing native methods and access to our WebGL2 Engine
     */
    protected webAssemblyContext: TSciChart;
    private dataSeriesNameProperty;
    private isSortedProperty;
    private containsNaNProperty;
    /**
     * Creates an instance of {@link BaseDataSeries}
     * @param webAssemblyContext the {@link TSciChart | SciChart WebAssembly Context} containing native methods
     * and access to our underlying WebGL2 rendering engine
     * @param options the {@link IBaseDataSeriesOptions} which can be passed to config the DataSeries at construct time
     */
    protected constructor(webAssemblyContext: TSciChart, options?: IBaseDataSeriesOptions);
    /**
     * @inheritDoc
     */
    get containsNaN(): boolean;
    /**
     * @inheritDoc
     */
    set containsNaN(containsNaN: boolean);
    /**
     * @inheritDoc
     */
    get isSorted(): boolean;
    /**
     * @inheritDoc
     */
    set isSorted(isSorted: boolean);
    /**
     * @inheritDoc
     */
    get dataSeriesName(): string;
    /**
     * @inheritDoc
     */
    set dataSeriesName(dataSeriesName: string);
    /**
     * @inheritDoc
     */
    count(): number;
    /**
     * @inheritDoc
     */
    getIsDeleted(): boolean;
    /**
     * @inheritDoc
     */
    getNativeIndexes(): DoubleVector;
    /**
     * @inheritDoc
     */
    getNativeXValues(): DoubleVector;
    /**
     * @inheritDoc
     */
    getNativeYValues(): DoubleVector;
    /**
     * @inheritDoc
     */
    delete(): void;
    /**
     * Call to notify subscribers of {@link dataChanged} that the data has changed and {@link SciChartSurface} needs redrawing
     */
    notifyDataChanged(): void;
    /**
     * @inheritDoc
     */
    get xRange(): NumberRange;
    /**
     * @inheritDoc
     */
    getWindowedYRange(xRange: NumberRange, getPositiveRange: boolean, isXCategoryAxis?: boolean): NumberRange;
    getIndicesRange(xRange: NumberRange): NumberRange;
    /**
     * @inheritDoc
     */
    get hasValues(): boolean;
}
export declare const getWindowedYRange: (webAssemblyContext: TSciChart, xValues: DoubleVector, yValues: DoubleVector, xRange: NumberRange, getPositiveRange: boolean, isXCategoryAxis: boolean, isSorted: boolean) => NumberRange;
