"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SeriesInfo = void 0;
const SeriesType_1 = require("../../../types/SeriesType");
class SeriesInfo {
    constructor(renderableSeries, hitTestInfo) {
        var _a;
        this.renderableSeries = renderableSeries;
        this.seriesName = (_a = renderableSeries.dataSeries) === null || _a === void 0 ? void 0 : _a.dataSeriesName;
        this.stroke = renderableSeries.stroke;
        this.dataSeriesType = hitTestInfo.dataSeriesType;
        this.dataSeriesIndex = hitTestInfo.dataSeriesIndex;
        this.isHit = hitTestInfo.isHit;
        this.xValue = hitTestInfo.isCategoryAxis ? hitTestInfo.xCategoryValue : hitTestInfo.xValue;
        this.yValue = hitTestInfo.yValue;
        this.xCoordinate = hitTestInfo.xCoord;
        this.yCoordinate = hitTestInfo.yCoord;
        if (renderableSeries.type === SeriesType_1.ESeriesType.ColumnSeries) {
            this.fill = renderableSeries.fill;
        }
        else if (renderableSeries.type === SeriesType_1.ESeriesType.MountainSeries) {
            this.fill = renderableSeries.fill;
        }
        else if (renderableSeries.type === SeriesType_1.ESeriesType.BandSeries) {
            this.fill = renderableSeries.fill;
        }
    }
    get isVisible() {
        return this.renderableSeries.isVisible;
    }
    get formattedYValue() {
        return this.getYCursorFormattedValue(this.yValue);
    }
    get formattedXValue() {
        return this.getXCursorFormattedValue(this.xValue);
    }
    getYCursorFormattedValue(value) {
        return this.renderableSeries.yAxis.labelProvider.formatLabel(value);
    }
    getXCursorFormattedValue(value) {
        return this.renderableSeries.xAxis.labelProvider.formatLabel(value);
    }
}
exports.SeriesInfo = SeriesInfo;
