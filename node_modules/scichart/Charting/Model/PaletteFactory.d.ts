import { GradientParams } from "../../Core/GradientParams";
import { TGradientStop } from "../../types/TGradientStop";
import { TSciChart } from "../../types/TSciChart";
import { IStrokePaletteProvider } from "./IPaletteProvider";
/**
 * The PaletteFactory allows easy creation of palettes for some chart types
 */
export declare class PaletteFactory {
    static readonly precision: number;
    /**
     * Creates a Gradient Palette for line series, returning a {@link IStrokePaletteProvider} implementation which
     * colors data-points of line charts depending on the x-index of the data according to the Gradient Brush passed in
     * @param webAssemblyContext the {@link TSciChart | SciChart WebAssembly Context} containing native methods
     * @param gradientBrush the {@link GradientParams} containing information about the Gradient Brush
     */
    static createGradient(webAssemblyContext: TSciChart, gradientBrush: GradientParams): IStrokePaletteProvider;
    static createColorMap(webAssemblyContext: TSciChart, gradientStops: TGradientStop[]): number[];
}
