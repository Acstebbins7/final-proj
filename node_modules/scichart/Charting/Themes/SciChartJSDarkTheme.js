"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SciChartJSDarkTheme = void 0;
const defaultThemeColors_1 = require("./defaultThemeColors");
/**
 * An implementation of {@link IThemeProvider} which provides a dark theme
 * @decription Applied to a 2D {@link SciChartSurface}, or a 3D {@link SciChart3DSurface}, the ThemeProvider may be
 * applied using the {@link SciChartSurface.applyTheme | applyTheme} method, where it is passed down to child components
 * so that all children of the chart get the same theme.
 *
 * For example:
 * ```ts
 * // Applying a built-in dark theme
 * const sciChartSurface: SciChartSurface;
 * sciChartSurface.applyTheme(new SciChartJSDarkTheme());
 * // Or light theme
 * sciChartSurface.applyTheme(new SciChartJSLightTheme());
 *
 * // Applying a custom theme
 * export class MyCustomTheme implements IThemeProvider {
 *    // todo: implement IThemeProvider interface and apply properties
 * }
 *
 * sciChartSurface.applyTheme(new MyCustomTheme());
 * ```
 */
class SciChartJSDarkTheme {
    constructor() {
        /** @inheritDoc */
        this.sciChartBackground = defaultThemeColors_1.defaultThemeColors.sciChartBackground;
        /** @inheritDoc */
        this.gridBorderBrush = defaultThemeColors_1.defaultThemeColors.gridBorderBrush;
        /** @inheritDoc */
        this.axisBandsFill = defaultThemeColors_1.defaultThemeColors.axisBandsFill;
        /** @inheritDoc */
        this.tickTextBrush = defaultThemeColors_1.defaultThemeColors.tickTextBrush;
        /** @inheritDoc */
        this.majorGridLineBrush = defaultThemeColors_1.defaultThemeColors.majorGridLineBrush;
        /** @inheritDoc */
        this.minorGridLineBrush = defaultThemeColors_1.defaultThemeColors.minorGridLineBrush;
        /** @inheritDoc */
        this.gridBackgroundBrush = defaultThemeColors_1.defaultThemeColors.gridBackgroundBrush;
        /** @inheritDoc */
        this.rolloverLineBrush = defaultThemeColors_1.defaultThemeColors.rolloverLineBrush;
        /** @inheritDoc */
        this.cursorLineBrush = defaultThemeColors_1.defaultThemeColors.cursorLineBrush;
        /** @inheritDoc */
        this.rubberBandFillBrush = defaultThemeColors_1.defaultThemeColors.rubberBandFillBrush;
        /** @inheritDoc */
        this.rubberBandStrokeBrush = defaultThemeColors_1.defaultThemeColors.rubberBandStrokeBrush;
        /** @inheritDoc */
        this.legendBackgroundBrush = defaultThemeColors_1.defaultThemeColors.legendBackgroundBrush;
        /** @inheritDoc */
        this.labelBackgroundBrush = defaultThemeColors_1.defaultThemeColors.labelBackgroundBrush;
        /** @inheritDoc */
        this.labelBorderBrush = defaultThemeColors_1.defaultThemeColors.labelBorderBrush;
        /** @inheritDoc */
        this.labelForegroundBrush = defaultThemeColors_1.defaultThemeColors.labelForegroundBrush;
        /** @inheritDoc */
        this.textAnnotationForeground = defaultThemeColors_1.defaultThemeColors.textAnnotationForeground;
        /** @inheritDoc */
        this.textAnnotationBackground = defaultThemeColors_1.defaultThemeColors.textAnnotationBackground;
        /** @inheritDoc */
        this.annotationsGripsBorderBrush = defaultThemeColors_1.defaultThemeColors.annotationsGripsBorderBrush;
        /** @inheritDoc */
        this.annotationsGripsBackroundBrush = defaultThemeColors_1.defaultThemeColors.annotationsGripsBackroundBrush;
        /** @inheritDoc */
        this.overviewFillBrush = defaultThemeColors_1.defaultThemeColors.overviewFillBrush;
        /** @inheritDoc */
        this.scrollbarBackgroundBrush = defaultThemeColors_1.defaultThemeColors.scrollbarBackgroundBrush;
        /** @inheritDoc */
        this.scrollbarBorderBrush = defaultThemeColors_1.defaultThemeColors.scrollbarBorderBrush;
        /** @inheritDoc */
        this.scrollbarGripsBackgroundBrush = defaultThemeColors_1.defaultThemeColors.scrollbarGripsBackgroundBrush;
        /** @inheritDoc */
        this.scrollbarViewportBackgroundBrush = defaultThemeColors_1.defaultThemeColors.scrollbarViewportBackgroundBrush;
        /** @inheritDoc */
        this.scrollbarViewportBorderBrush = defaultThemeColors_1.defaultThemeColors.scrollbarViewportBorderBrush;
        /** @inheritDoc */
        this.upWickColor = defaultThemeColors_1.defaultThemeColors.upWickColor;
        /** @inheritDoc */
        this.downWickColor = defaultThemeColors_1.defaultThemeColors.downWickColor;
        /** @inheritDoc */
        this.upBodyBrush = defaultThemeColors_1.defaultThemeColors.upBodyBrush;
        /** @inheritDoc */
        this.downBodyBrush = defaultThemeColors_1.defaultThemeColors.downBodyBrush;
        /** @inheritDoc */
        this.upBandSeriesLineColor = defaultThemeColors_1.defaultThemeColors.upBandSeriesLineColor;
        /** @inheritDoc */
        this.downBandSeriesLineColor = defaultThemeColors_1.defaultThemeColors.downBandSeriesLineColor;
        /** @inheritDoc */
        this.upBandSeriesFillColor = defaultThemeColors_1.defaultThemeColors.upBandSeriesFillColor;
        /** @inheritDoc */
        this.downBandSeriesFillColor = defaultThemeColors_1.defaultThemeColors.downBandSeriesFillColor;
        /** @inheritDoc */
        this.mountainAreaBrush = defaultThemeColors_1.defaultThemeColors.mountainAreaBrush;
        /** @inheritDoc */
        this.mountainLineColor = defaultThemeColors_1.defaultThemeColors.mountainLineColor;
        /** @inheritDoc */
        this.lineSeriesColor = defaultThemeColors_1.defaultThemeColors.lineSeriesColor;
        /** @inheritDoc */
        this.columnLineColor = defaultThemeColors_1.defaultThemeColors.columnLineColor;
        /** @inheritDoc */
        this.columnFillBrush = defaultThemeColors_1.defaultThemeColors.columnFillBrush;
        /** @inheritDoc */
        this.defaultColorMapBrush = [
            { offset: 0, color: defaultThemeColors_1.defaultThemeColors.defaultColorMapBrush.point_0 },
            { offset: 0.5, color: defaultThemeColors_1.defaultThemeColors.defaultColorMapBrush.point_0_5 },
            { offset: 1, color: defaultThemeColors_1.defaultThemeColors.defaultColorMapBrush.point_1 }
        ];
        /** @inheritDoc */
        this.axisTitleColor = defaultThemeColors_1.defaultThemeColors.axisTitleColor;
        /** @inheritDoc */
        this.shadowEffectColor = defaultThemeColors_1.defaultThemeColors.shadowEffectColor;
        /** @inheritDoc */
        this.planeBorderColor = defaultThemeColors_1.defaultThemeColors.planeBorderColor;
        /** @inheritDoc */
        this.axisPlaneBackgroundFill = defaultThemeColors_1.defaultThemeColors.axisPlaneBackgroundFill;
        /** @inheritDoc */
        this.axis3DBandsFill = defaultThemeColors_1.defaultThemeColors.axis3DBandsFill;
    }
}
exports.SciChartJSDarkTheme = SciChartJSDarkTheme;
