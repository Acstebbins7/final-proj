import { ENumericFormat } from "../../../../types/NumericFormat";
import { AxisCore } from "../AxisCore";
/**
 * @summary A base class for Label Providers - types which allow programmatic overriding of Axis labels
 */
export declare abstract class LabelProvider {
    /**
     * A standard numeric format to use. For a list of values, see {@link ENumericFormat}
     */
    abstract numericFormat: ENumericFormat;
    /**
     * The parent {@link AxisCore}. This will be set once {@link attachedToAxis} is called
     */
    parentAxis: AxisCore;
    /**
     * Called when the {@link LabelProvider} is attached to an {@link AxisCore | Axis}
     * @param axis The Axis we are attached to.
     */
    attachedToAxis(axis: AxisCore): void;
    /**
     * Called once when an axis drawing pass begins. Use this method to do one-time setup
     */
    abstract onBeginAxisDraw(): void;
    /**
     * Formats a data-value into a string for display on the axis labels
     * @param dataValue The data-value (e.g. a numeric value)
     * @returns the string for the axis label
     */
    abstract formatLabel(dataValue: number): string;
    /**
     * Formats a data-value into a string for display on a cursor or tooltip
     * @param dataValue The data-value (e.g. a numeric value)
     * @param formatString An optional formatting string
     * @returns the string for the cursor
     */
    abstract formatCursorLabel(dataValue: number, formatString: string): string;
}
