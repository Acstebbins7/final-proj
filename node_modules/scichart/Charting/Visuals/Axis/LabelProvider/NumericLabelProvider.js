"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NumericLabelProvider = void 0;
const NumericFormat_1 = require("../../../../types/NumericFormat");
const number_1 = require("../../../../utils/number");
const LabelProvider_1 = require("./LabelProvider");
/**
 * The {@link NumericLabelProvider} formats Axis Labels and Cursor / Tooltips for {@link NumericAxis} types
 */
class NumericLabelProvider extends LabelProvider_1.LabelProvider {
    /**
     * Creates an instance of {@link NumericLabelProvider}
     * @param format The desired {@link ENumericFormat | Label Format} enum
     */
    constructor(format = NumericFormat_1.ENumericFormat.NoFormat) {
        super();
        this.numericFormat = format;
    }
    /**
     * @inheritDoc
     */
    onBeginAxisDraw() {
        // TODO: user can override here if they want
    }
    /**
     * @inheritDoc
     */
    formatCursorLabel(dataValue, formatString) {
        // TODO: What should the format string look like in Javascript?
        // e.g. in C# we have this
        // return string.Format("{0:" + format + "}", dataValue);
        return dataValue.toString();
    }
    /**
     * @inheritDoc
     */
    formatLabel(dataValue) {
        // TODO: What should the format string look like in Javascript?
        // e.g. in C# we have this
        // return string.Format("{0:" + format + "}", dataValue);
        return number_1.formatNumber(dataValue, this.numericFormat);
    }
}
exports.NumericLabelProvider = NumericLabelProvider;
