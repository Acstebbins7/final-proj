"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NumericDeltaCalculator = void 0;
const Guard_1 = require("../../../../Core/Guard");
const NumberRange_1 = require("../../../../Core/NumberRange");
const DeltaCalculator_1 = require("./DeltaCalculator");
/**
 * The NumericDeltaCalculator is respinsible for calculating {@link AxisCore.minorDelta} and {@link AxisCore.majorDelta} on
 * {@link NumericAxis} types.
 */
class NumericDeltaCalculator extends DeltaCalculator_1.DeltaCalculator {
    /**
     * Creates an instance of the {@link NumericDeltaCalculator}
     * @param webAssemblyContext The {@link TSciChart | SciChart 2D WebAssembly Context} or {@link TSciChart2D | SciChart 2D WebAssembly Context}
     * containing native methods and access to our WebGL2 Engine and WebAssembly numerical methods
     */
    constructor(webAssemblyContext) {
        super();
        this.webAssemblyContext = webAssemblyContext;
    }
    /**
     * @inheritDoc
     */
    getDeltaFromRange(min, max, minorsPerMajor, maxTicks) {
        Guard_1.Guard.argumentIsRealNumber(min, "min");
        Guard_1.Guard.argumentIsRealNumber(max, "max");
        const delta = this.webAssemblyContext.NiceDoubleScale.CalculateTickSpacing(min, max, minorsPerMajor, maxTicks);
        const tsDelta = new NumberRange_1.NumberRange(delta.minD, delta.maxD);
        delta.delete();
        return tsDelta;
    }
}
exports.NumericDeltaCalculator = NumericDeltaCalculator;
