import { SeriesInfo } from "../../../Model/ChartData/SeriesInfo";
import { MarkerSvgAnnotation } from "../../Annotations/MarkerSvgAnnotation";
import { TooltipSvgAnnotation } from "../../Annotations/TooltipSvgAnnotation";
export declare class RolloverModifierRenderableSeriesProps {
    tooltip: TooltipSvgAnnotation;
    marker: MarkerSvgAnnotation;
    width: number;
    height: number;
    tooltipLabelX: string;
    tooltipLabelY: string;
    tooltipTemplate: (id: string, tooltipProps: RolloverModifierRenderableSeriesProps, seriesInfo: SeriesInfo, updateSize: (width: number, height: number) => void) => string;
    tooltipLegendTemplate: (tooltipProps: RolloverModifierRenderableSeriesProps, seriesInfo: SeriesInfo) => string;
    tooltipLegendOffsetX: number;
    tooltipLegendOffsetY: number;
    private invalidateParentCallback;
    private showsRolloverProperty;
    private tooltipColorProperty;
    private tooltipTextColorProperty;
    private tooltipTitleProperty;
    private markerColorProperty;
    setInvalidateParentCallback(callback: () => void): void;
    get showRollover(): boolean;
    set showRollover(value: boolean);
    get tooltipColor(): string;
    set tooltipColor(value: string);
    get tooltipTextColor(): string;
    set tooltipTextColor(value: string);
    get tooltipTitle(): string;
    set tooltipTitle(value: string);
    get markerColor(): string;
    set markerColor(value: string);
    delete(): void;
    protected notifyPropertyChanged<T>(propertyName: string): void;
}
