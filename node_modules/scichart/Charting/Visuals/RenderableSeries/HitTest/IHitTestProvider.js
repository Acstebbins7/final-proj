"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ENearestPointLogic = void 0;
var ENearestPointLogic;
(function (ENearestPointLogic) {
    /**
     * Find the nearest hit-test result using a 2-dimensional search,
     * e.g. this will find the closest point in X,Y direction using the shortest distance,
     * where distance = Sqrt(x*x + y*y)
     * @remarks
     * For a faster method for time-series, see the {@link NearestHorizontalPoint} option
     */
    ENearestPointLogic[ENearestPointLogic["NearestPoint2D"] = 0] = "NearestPoint2D";
    /**
     * Find the nearest hit-test result using a search in the X-direction first,
     * then the nearest y-point for that x-value
     * @remarks
     * This method is considerably faster than {@link NearestPoint2D}, however is only suitable for
     * time series (data ascending in X)
     */
    ENearestPointLogic[ENearestPointLogic["NearestHorizontalPoint"] = 1] = "NearestHorizontalPoint";
})(ENearestPointLogic = exports.ENearestPointLogic || (exports.ENearestPointLogic = {}));
