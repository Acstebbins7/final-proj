"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HeatmapColorMap = void 0;
const EventHandler_1 = require("../../../Core/EventHandler");
const PropertyChangedEventArgs_1 = require("../../../Core/PropertyChangedEventArgs");
const constants_1 = require("./constants");
class HeatmapColorMap {
    constructor(options) {
        this.minimumProperty = (options === null || options === void 0 ? void 0 : options.minimum) || 0;
        this.maximumProperty = (options === null || options === void 0 ? void 0 : options.maximum) || 100;
        this.gradientStops = (options === null || options === void 0 ? void 0 : options.gradientStops) || [{ offset: 0, color: "Red" }, { offset: 1, color: "Green" }];
        this.propertyChanged = new EventHandler_1.EventHandler();
        this.calculateScaleFactor();
    }
    get gradientStops() {
        return this.gradientStopsProperty;
    }
    set gradientStops(gradientStops) {
        this.gradientStopsProperty = gradientStops;
        this.notifyPropertyChanged(constants_1.PROPERTY.GRADIENT_STOPS);
    }
    get minimum() {
        return this.minimumProperty;
    }
    set minimum(minimum) {
        this.minimumProperty = minimum;
        this.notifyPropertyChanged(constants_1.PROPERTY.MINIMUM);
    }
    get maximum() {
        return this.maximumProperty;
    }
    set maximum(maximum) {
        this.maximumProperty = maximum;
        this.notifyPropertyChanged(constants_1.PROPERTY.MAXIMUM);
    }
    notifyPropertyChanged(property) {
        var _a;
        (_a = this.propertyChanged) === null || _a === void 0 ? void 0 : _a.raiseEvent(new PropertyChangedEventArgs_1.PropertyChangedEventArgs(property));
    }
    calculateScaleFactor() {
        this.scaleFactorProperty =
            (HeatmapColorMap.DefaultPrecision - 1) / Math.abs(this.maximumProperty - this.minimumProperty);
    }
}
exports.HeatmapColorMap = HeatmapColorMap;
HeatmapColorMap.DefaultPrecision = 1000;
