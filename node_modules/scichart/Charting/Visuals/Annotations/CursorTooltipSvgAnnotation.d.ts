import { TTooltipSvgTemplate } from "../../ChartModifiers/CursorModifier";
import { SeriesInfo } from "../../Model/ChartData/SeriesInfo";
import { CoordinateCalculatorBase } from "../../Numerics/CoordinateCalculators/CoordinateCalculatorBase";
import { EAnnotationType } from "./IAnnotation";
import { ISvgAnnotationBaseOptions, SvgAnnotationBase } from "./SvgAnnotationBase";
export interface ICursorTooltipSvgAnnotationOptions extends ISvgAnnotationBaseOptions {
    title?: string;
    tooltipSvgTemplate?: (seriesInfos: SeriesInfo[], svgAnnotation: CursorTooltipSvgAnnotation) => string;
    seriesInfos?: SeriesInfo[];
    containerBackground?: string;
    textStroke?: string;
}
/**
 * A Tooltip Annotation which provides an SVG tooltip over the chart. Used by the {@link RolloverModifier}
 */
export declare class CursorTooltipSvgAnnotation extends SvgAnnotationBase {
    /** @inheritDoc */
    readonly type = EAnnotationType.SVG;
    private titleProperty;
    private tooltipSvgTemplateProperty;
    private seriesInfosProperty;
    private containerBackgroundProperty;
    private textStrokeProperty;
    /**
     * Creates an instance of the {@link TooltipSvgAnnotation}
     * @param options
     */
    constructor(options?: ICursorTooltipSvgAnnotationOptions);
    /**
     * Gets or sets seriesInfos {@link SeriesInfo} value on the tooltip
     */
    get seriesInfos(): SeriesInfo[];
    /**
     * Gets or sets seriesInfos {@link SeriesInfo} value on the tooltip
     */
    set seriesInfos(value: SeriesInfo[]);
    get title(): string;
    set title(value: string);
    get tooltipSvgTemplate(): TTooltipSvgTemplate;
    set tooltipSvgTemplate(value: TTooltipSvgTemplate);
    get containerBackground(): string;
    set containerBackground(value: string);
    get textStroke(): string;
    set textStroke(value: string);
    /**
     * @inheritDoc
     */
    update(xCalc: CoordinateCalculatorBase, yCalc: CoordinateCalculatorBase): void;
    /**
     * @inheritDoc
     */
    protected create(xCalc: CoordinateCalculatorBase, yCalc: CoordinateCalculatorBase): void;
}
