"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MarkerSvgAnnotation = void 0;
const IAnnotation_1 = require("./IAnnotation");
const SvgAnnotationBase_1 = require("./SvgAnnotationBase");
class MarkerSvgAnnotation extends SvgAnnotationBase_1.SvgAnnotationBase {
    constructor(renderableSeriesProps) {
        super();
        /** @inheritDoc */
        this.type = IAnnotation_1.EAnnotationType.SVG;
        this.tooltipProps = renderableSeriesProps;
        this.isHidden = true;
        this.x1 = 0;
        this.y1 = 0;
        this.xCoordShift = -4;
        this.yCoordShift = -4;
    }
    create() {
        if (this.svg) {
            this.delete();
        }
        const { tooltipColor, markerColor } = this.tooltipProps;
        const svgString = tooltipSvgTemplate(markerColor !== null && markerColor !== void 0 ? markerColor : tooltipColor);
        const svgNode = document.createRange().createContextualFragment(svgString);
        this.svgRoot.appendChild(svgNode);
        this.svg = this.svgRoot.lastChild;
    }
}
exports.MarkerSvgAnnotation = MarkerSvgAnnotation;
/**
 * @ignore
 */
const tooltipSvgTemplate = (fillColor) => `<svg width="8" height="8"><circle cx="50%" cy="50%" r="4" fill="${fillColor}"/></svg>`;
