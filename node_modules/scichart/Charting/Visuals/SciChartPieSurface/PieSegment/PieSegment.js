"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PieSegment = void 0;
const guid_1 = require("../../../../utils/guid");
const constants_1 = require("./constants");
class PieSegment {
    constructor(options) {
        var _a, _b, _c, _d, _e;
        this.id = guid_1.generateGuid();
        this.colorProperty = "grey";
        this.isSelectedProperty = false;
        this.textProperty = "";
        this.deltaProperty = 0;
        this.colorProperty = (_a = options === null || options === void 0 ? void 0 : options.color) !== null && _a !== void 0 ? _a : this.colorProperty;
        this.colorLinearGradientProperty = (_b = options === null || options === void 0 ? void 0 : options.colorLinearGradient) !== null && _b !== void 0 ? _b : this.colorLinearGradientProperty;
        this.isSelectedProperty = (_c = options === null || options === void 0 ? void 0 : options.isSelected) !== null && _c !== void 0 ? _c : this.isSelectedProperty;
        this.textProperty = (_d = options === null || options === void 0 ? void 0 : options.text) !== null && _d !== void 0 ? _d : this.textProperty;
        this.valueProperty = (_e = options === null || options === void 0 ? void 0 : options.value) !== null && _e !== void 0 ? _e : this.valueProperty;
    }
    onAttach(scps) {
        this.invalidateParentCallback = scps.invalidateElement;
    }
    onDetach() {
        this.invalidateParentCallback = undefined;
    }
    // GETTERS AND SETTERS FOR PROPERTIES
    get colorLinearGradient() {
        return this.colorLinearGradientProperty;
    }
    set colorLinearGradient(value) {
        this.colorLinearGradientProperty = value;
        this.notifyPropertyChanged(constants_1.PROPERTY.COLOR_LINEAR_GRADIENT);
    }
    get color() {
        return this.colorProperty;
    }
    set color(value) {
        this.colorProperty = value;
        this.notifyPropertyChanged(constants_1.PROPERTY.COLOR);
    }
    get isSelected() {
        return this.isSelectedProperty;
    }
    set isSelected(value) {
        this.isSelectedProperty = value;
        if (value) {
            this.deltaProperty = PieSegment.DEFAULT_DELTA;
        }
        else {
            this.deltaProperty = 0;
        }
        this.notifyPropertyChanged(constants_1.PROPERTY.IS_SELECTED);
    }
    get text() {
        return this.textProperty;
    }
    set text(value) {
        this.textProperty = value;
        this.notifyPropertyChanged(constants_1.PROPERTY.TEXT);
    }
    getPercentage(total) {
        const pers = 100 * this.value / total;
        return pers.toFixed(2) + " %";
    }
    get value() {
        return this.valueProperty;
    }
    set value(value) {
        this.valueProperty = value;
        this.notifyPropertyChanged(constants_1.PROPERTY.VALUE);
    }
    get delta() {
        return this.deltaProperty;
    }
    set delta(value) {
        if (this.deltaProperty === PieSegment.DEFAULT_DELTA && value < PieSegment.DEFAULT_DELTA) {
            this.isSelectedProperty = false;
        }
        else if (this.deltaProperty === 0 && value > 0) {
            this.isSelectedProperty = true;
        }
        this.deltaProperty = value;
        this.notifyPropertyChanged(constants_1.PROPERTY.DELTA);
    }
    notifyPropertyChanged(propertyName) {
        if (this.invalidateParentCallback) {
            this.invalidateParentCallback();
        }
    }
}
exports.PieSegment = PieSegment;
PieSegment.DEFAULT_DELTA = 15;
