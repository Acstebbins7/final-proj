"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fillNoisySinewave = exports.getNoisySinewave = void 0;
exports.getNoisySinewave = (pointCount, xMax, frequency, amplitude, noiseAmplitude) => {
    // TODO: add noise
    const xValues = [];
    const yValues = [];
    const phase = frequency / xMax;
    const freq = 2 * Math.PI * phase;
    for (let i = 0; i < pointCount; i++) {
        const x = (i * xMax) / (pointCount - 1);
        xValues.push(x);
        const y = amplitude * Math.sin(x * freq);
        const yNoise = (Math.random() - 0.5) * noiseAmplitude;
        yValues.push(y + yNoise);
    }
    return [xValues, yValues];
};
exports.fillNoisySinewave = (pointCount, xMax, frequency, amplitude, noiseAmplitude, dataSeries) => {
    const phase = frequency / xMax;
    const freq = 2 * Math.PI * phase;
    const xValues = dataSeries.getNativeXValues();
    const yValues = dataSeries.getNativeYValues();
    xValues.reserve(pointCount);
    yValues.reserve(pointCount);
    for (let i = 0; i < pointCount; i++) {
        const x = (i * xMax) / (pointCount - 1);
        const y = amplitude * Math.sin(x * freq);
        const yNoise = (Math.random() - 0.5) * noiseAmplitude;
        xValues.push_back(x);
        yValues.push_back(y + yNoise);
    }
};
