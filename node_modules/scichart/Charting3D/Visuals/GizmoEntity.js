"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GizmoEntity = void 0;
const SceneEntityType_1 = require("../../types/SceneEntityType");
const BaseSceneEntity3D_1 = require("./Primitives/BaseSceneEntity3D");
/**
 * The {@link GizmoEntity} renders a 3D X-Y-Z axis in the bottom left of the chart.
 * @remarks Added automatically by the {@link SciChart3DSurface} and may be enabled or
 * disabled by setting the {@link SciChart3DSurface.enableGizmo} property
 */
class GizmoEntity extends BaseSceneEntity3D_1.BaseSceneEntity3D {
    /**
     * Creates an instance of the {@link GizmoEntity}
     * @param webAssemblyContext The {@link TSciChart3D | SciChart 3D WebAssembly Context} containing
     * native methods and access to our WebGL2 WebAssembly Drawing Engine
     */
    constructor(webAssemblyContext) {
        super(webAssemblyContext);
        /**
         * @inheritDoc
         */
        this.type = SceneEntityType_1.ESceneEntityType.GizmoEntity;
        this.setNativeEntity(webAssemblyContext.SCRTXyzGizmoEntity.implement(this));
    }
    /**
     * Gets or sets whether the Gizmo is enabled
     */
    get enableGizmo() {
        return this.nativeEntity.GetOverrideEnableGizmo();
    }
    /**
     * Gets or sets whether the Gizmo is enabled
     */
    set enableGizmo(isEnabled) {
        this.nativeEntity.SetOverrideEnableGizmo(isEnabled);
    }
}
exports.GizmoEntity = GizmoEntity;
